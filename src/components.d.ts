/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { OptionsModal, } from "./models/cp-modals.models";
export namespace Components {
    interface TestModal {
        "doSomething": () => Promise<void>;
        "titleModal": string;
    }
    interface TestRootModals {
    }
    interface WcHandleModals {
        "addModal": (tagModal: string, options?: OptionsModal) => Promise<HTMLElement>;
        "removeModal": () => Promise<void>;
    }
    interface WcOverlay {
        "cleanChildModals": () => Promise<void>;
        "closeModal": (id: string) => Promise<void>;
        "getChildModals": () => Promise<Node[]>;
        "isShow": boolean;
        "showOverlay": boolean;
    }
}
declare global {
    interface HTMLTestModalElement extends Components.TestModal, HTMLStencilElement {
    }
    var HTMLTestModalElement: {
        prototype: HTMLTestModalElement;
        new (): HTMLTestModalElement;
    };
    interface HTMLTestRootModalsElement extends Components.TestRootModals, HTMLStencilElement {
    }
    var HTMLTestRootModalsElement: {
        prototype: HTMLTestRootModalsElement;
        new (): HTMLTestRootModalsElement;
    };
    interface HTMLWcHandleModalsElement extends Components.WcHandleModals, HTMLStencilElement {
    }
    var HTMLWcHandleModalsElement: {
        prototype: HTMLWcHandleModalsElement;
        new (): HTMLWcHandleModalsElement;
    };
    interface HTMLWcOverlayElement extends Components.WcOverlay, HTMLStencilElement {
    }
    var HTMLWcOverlayElement: {
        prototype: HTMLWcOverlayElement;
        new (): HTMLWcOverlayElement;
    };
    interface HTMLElementTagNameMap {
        "test-modal": HTMLTestModalElement;
        "test-root-modals": HTMLTestRootModalsElement;
        "wc-handle-modals": HTMLWcHandleModalsElement;
        "wc-overlay": HTMLWcOverlayElement;
    }
}
declare namespace LocalJSX {
    interface TestModal {
        "onComponentLoad"?: (event: CustomEvent<any>) => void;
        "onCpCloseModal"?: (event: CustomEvent<{
            element: HTMLElement;
            data: any;
        }>) => void;
        "onCpCustomClickModal"?: (event: CustomEvent<any>) => void;
        "titleModal"?: string;
    }
    interface TestRootModals {
    }
    interface WcHandleModals {
    }
    interface WcOverlay {
        "isShow"?: boolean;
        "showOverlay"?: boolean;
    }
    interface IntrinsicElements {
        "test-modal": TestModal;
        "test-root-modals": TestRootModals;
        "wc-handle-modals": WcHandleModals;
        "wc-overlay": WcOverlay;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "test-modal": LocalJSX.TestModal & JSXBase.HTMLAttributes<HTMLTestModalElement>;
            "test-root-modals": LocalJSX.TestRootModals & JSXBase.HTMLAttributes<HTMLTestRootModalsElement>;
            "wc-handle-modals": LocalJSX.WcHandleModals & JSXBase.HTMLAttributes<HTMLWcHandleModalsElement>;
            "wc-overlay": LocalJSX.WcOverlay & JSXBase.HTMLAttributes<HTMLWcOverlayElement>;
        }
    }
}
